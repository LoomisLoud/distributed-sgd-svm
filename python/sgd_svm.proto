syntax = "proto3";

package sgdsvm;

// Interface exported by the server.
service SGDSVM{
  // Asks the server for data, labels and weights
  // if the client is authorized, server answers with the data
  rpc getDataLabels(Auth) returns (Data) {}

  // Authenticating to the server, succeeds
  // if the server can still accept connections
  rpc auth(Empty) returns (Auth) {}

  // Sends the computed gradient update to the server
  rpc sendGradientUpdate(GradientUpdate) returns (Empty) {}

  // Tells the server that the client is done computing
  // for the current job
  rpc sendDoneComputing(Empty) returns (Empty) {}
}

// Gradient computed composed of:
//  - json of feature->gradient update
//  - id of the client sending the update
message GradientUpdate {
  string gradient_update_json = 1;
  int32 id = 2;
}

// The data sent by the server for the
// client to compute an update, composed of:
//  - json of n samples
//  - json of labels
//  - json of weights
message Data {
  string samples_json = 1;
  string labels_json = 2;
  string weights_json = 3;
}

// The authentication message the client
// sends to the server, composed of:
//  - id of the client
message Auth {
  int32 id = 1;
}

// An empty message, default behavior
// when no particular message is needed
message Empty {}
